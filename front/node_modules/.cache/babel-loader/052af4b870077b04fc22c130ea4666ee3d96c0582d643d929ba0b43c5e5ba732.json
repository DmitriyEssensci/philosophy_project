{"ast":null,"code":"var _jsxFileName = \"/home/dmitriyessensci/me/philosophy_project/front/src/components/PhilosophersList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhilosophersList = ({\n  data\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Фильтруем философов с хотя бы одной связью\n  const filteredData = data.filter(item => item.influenced_by && item.influenced_by.length > 0 || item.influenced && item.influenced.length > 0);\n\n  // Сортируем по количеству связей (от наибольшего к наименьшему)\n  const sortedData = filteredData.sort((a, b) => {\n    const aConnections = (a.influenced_by ? a.influenced_by.split(',').length : 0) + (a.influenced ? a.influenced.split(',').length : 0);\n    const bConnections = (b.influenced_by ? b.influenced_by.split(',').length : 0) + (b.influenced ? b.influenced.split(',').length : 0);\n    return bConnections - aConnections;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '20px',\n      right: '20px',\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      style: {\n        padding: '10px',\n        backgroundColor: '#fff',\n        border: '1px solid #ccc',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: isOpen ? 'Скрыть список' : 'Показать список философов'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        backgroundColor: '#fff',\n        border: '1px solid #ccc',\n        borderRadius: '5px',\n        padding: '10px',\n        maxHeight: '300px',\n        overflowY: 'auto'\n      },\n      children: sortedData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: item.person_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.short_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PhilosophersList, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = PhilosophersList;\nexport default PhilosophersList;\nvar _c;\n$RefreshReg$(_c, \"PhilosophersList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PhilosophersList","data","_s","isOpen","setIsOpen","filteredData","filter","item","influenced_by","length","influenced","sortedData","sort","a","b","aConnections","split","bConnections","style","position","bottom","right","zIndex","children","onClick","padding","backgroundColor","border","borderRadius","cursor","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","maxHeight","overflowY","map","marginBottom","person_name","short_description","id","_c","$RefreshReg$"],"sources":["/home/dmitriyessensci/me/philosophy_project/front/src/components/PhilosophersList.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PhilosophersList = ({ data }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // Фильтруем философов с хотя бы одной связью\r\n  const filteredData = data.filter(\r\n    (item) => (item.influenced_by && item.influenced_by.length > 0) || (item.influenced && item.influenced.length > 0)\r\n  );\r\n\r\n  // Сортируем по количеству связей (от наибольшего к наименьшему)\r\n  const sortedData = filteredData.sort((a, b) => {\r\n    const aConnections = (a.influenced_by ? a.influenced_by.split(',').length : 0) + (a.influenced ? a.influenced.split(',').length : 0);\r\n    const bConnections = (b.influenced_by ? b.influenced_by.split(',').length : 0) + (b.influenced ? b.influenced.split(',').length : 0);\r\n    return bConnections - aConnections;\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        bottom: '20px',\r\n        right: '20px',\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        style={{\r\n          padding: '10px',\r\n          backgroundColor: '#fff',\r\n          border: '1px solid #ccc',\r\n          borderRadius: '5px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        {isOpen ? 'Скрыть список' : 'Показать список философов'}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div\r\n          style={{\r\n            marginTop: '10px',\r\n            backgroundColor: '#fff',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '5px',\r\n            padding: '10px',\r\n            maxHeight: '300px',\r\n            overflowY: 'auto',\r\n          }}\r\n        >\r\n          {sortedData.map((item) => (\r\n            <div key={item.id} style={{ marginBottom: '10px' }}>\r\n              <strong>{item.person_name}</strong>\r\n              <p>{item.short_description}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhilosophersList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}