{"ast":null,"code":"var _jsxFileName = \"/home/dmitriyessensci/me/philosophy_project/front/src/components/spider_data.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpiderData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [newPerson, setNewPerson] = useState({\n    person_name: \"\",\n    years_life: \"\",\n    school_teaching: \"\",\n    period_life: \"\",\n    person_teacher: \"\",\n    person_followers: \"\",\n    person_works: \"\",\n    short_description: \"\",\n    full_description: \"\"\n  });\n  const svgRef = useRef(null);\n  const zoomRef = useRef(null);\n\n  // Fetch data from the backend\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:9000/api/persons\");\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  // Create a new person\n  const createPerson = async () => {\n    try {\n      await axios.post(\"http://localhost:9000/api/persons\", newPerson);\n      setNewPerson({\n        person_name: \"\",\n        years_life: \"\",\n        school_teaching: \"\",\n        period_life: \"\",\n        person_teacher: \"\",\n        person_followers: \"\",\n        person_works: \"\",\n        short_description: \"\",\n        full_description: \"\"\n      });\n      fetchData(); // Refresh data\n    } catch (error) {\n      console.error(\"Error creating person:\", error);\n    }\n  };\n\n  // Render the spider web\n  const renderSpiderWeb = () => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove(); // Clear previous content\n\n    const width = 800;\n    const height = 600;\n    svg.attr(\"width\", width).attr(\"height\", height);\n\n    // Zoom and pan functionality\n    zoomRef.current = d3.zoom().scaleExtent([0.5, 5]).on(\"zoom\", event => {\n      svg.attr(\"transform\", event.transform);\n    });\n    svg.call(zoomRef.current);\n\n    // Group data by school_teaching\n    const schools = d3.group(data, d => d.school_teaching);\n\n    // Create nodes for each person\n    const nodes = [];\n    schools.forEach((persons, school) => {\n      const centerX = Math.random() * width;\n      const centerY = Math.random() * height;\n      persons.forEach((person, i) => {\n        const angle = i / persons.length * 2 * Math.PI;\n        const radius = 100;\n        nodes.push({\n          ...person,\n          x: centerX + radius * Math.cos(angle),\n          y: centerY + radius * Math.sin(angle),\n          school\n        });\n      });\n    });\n\n    // Draw links between nodes with the same school_teaching\n    svg.selectAll(\".link\").data(nodes).enter().append(\"line\").attr(\"class\", \"link\").attr(\"x1\", d => d.x).attr(\"y1\", d => d.y).attr(\"x2\", d => {\n      const nextNode = nodes.find(n => n.school === d.school && n !== d);\n      return nextNode ? nextNode.x : d.x;\n    }).attr(\"y2\", d => {\n      const nextNode = nodes.find(n => n.school === d.school && n !== d);\n      return nextNode ? nextNode.y : d.y;\n    }).attr(\"stroke\", \"#999\").attr(\"stroke-width\", 2);\n\n    // Draw nodes\n    svg.selectAll(\".node\").data(nodes).enter().append(\"circle\").attr(\"class\", \"node\").attr(\"cx\", d => d.x).attr(\"cy\", d => d.y).attr(\"r\", 10).attr(\"fill\", d => d3.schemeCategory10[d.school.length % 10]);\n\n    // Add labels\n    svg.selectAll(\".label\").data(nodes).enter().append(\"text\").attr(\"class\", \"label\").attr(\"x\", d => d.x + 15).attr(\"y\", d => d.y).text(d => d.person_name).attr(\"font-size\", \"12px\").attr(\"fill\", \"#333\");\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Render spider web when data changes\n  useEffect(() => {\n    if (data.length > 0) {\n      renderSpiderWeb();\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spider Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Person Name\",\n        value: newPerson.person_name,\n        onChange: e => setNewPerson({\n          ...newPerson,\n          person_name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Years of Life\",\n        value: newPerson.years_life,\n        onChange: e => setNewPerson({\n          ...newPerson,\n          years_life: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"School of Teaching\",\n        value: newPerson.school_teaching,\n        onChange: e => setNewPerson({\n          ...newPerson,\n          school_teaching: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPerson,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(SpiderData, \"LDQNPqxsNkV+00xNwtKGywg3mIU=\");\n_c = SpiderData;\nexport default SpiderData;\nvar _c;\n$RefreshReg$(_c, \"SpiderData\");","map":{"version":3,"names":["React","useEffect","useState","useRef","d3","axios","jsxDEV","_jsxDEV","SpiderData","_s","data","setData","newPerson","setNewPerson","person_name","years_life","school_teaching","period_life","person_teacher","person_followers","person_works","short_description","full_description","svgRef","zoomRef","fetchData","response","get","error","console","createPerson","post","renderSpiderWeb","svg","select","current","selectAll","remove","width","height","attr","zoom","scaleExtent","on","event","transform","call","schools","group","d","nodes","forEach","persons","school","centerX","Math","random","centerY","person","i","angle","length","PI","radius","push","x","cos","y","sin","enter","append","nextNode","find","n","schemeCategory10","text","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/dmitriyessensci/me/philosophy_project/front/src/components/spider_data.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport axios from \"axios\";\r\n\r\nconst SpiderData = () => {\r\n  const [data, setData] = useState([]);\r\n  const [newPerson, setNewPerson] = useState({\r\n    person_name: \"\",\r\n    years_life: \"\",\r\n    school_teaching: \"\",\r\n    period_life: \"\",\r\n    person_teacher: \"\",\r\n    person_followers: \"\",\r\n    person_works: \"\",\r\n    short_description: \"\",\r\n    full_description: \"\",\r\n  });\r\n  const svgRef = useRef(null);\r\n  const zoomRef = useRef(null);\r\n\r\n  // Fetch data from the backend\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:9000/api/persons\");\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Create a new person\r\n  const createPerson = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:9000/api/persons\", newPerson);\r\n      setNewPerson({\r\n        person_name: \"\",\r\n        years_life: \"\",\r\n        school_teaching: \"\",\r\n        period_life: \"\",\r\n        person_teacher: \"\",\r\n        person_followers: \"\",\r\n        person_works: \"\",\r\n        short_description: \"\",\r\n        full_description: \"\",\r\n      });\r\n      fetchData(); // Refresh data\r\n    } catch (error) {\r\n      console.error(\"Error creating person:\", error);\r\n    }\r\n  };\r\n\r\n  // Render the spider web\r\n  const renderSpiderWeb = () => {\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll(\"*\").remove(); // Clear previous content\r\n\r\n    const width = 800;\r\n    const height = 600;\r\n    svg.attr(\"width\", width).attr(\"height\", height);\r\n\r\n    // Zoom and pan functionality\r\n    zoomRef.current = d3\r\n      .zoom()\r\n      .scaleExtent([0.5, 5])\r\n      .on(\"zoom\", (event) => {\r\n        svg.attr(\"transform\", event.transform);\r\n      });\r\n    svg.call(zoomRef.current);\r\n\r\n    // Group data by school_teaching\r\n    const schools = d3.group(data, (d) => d.school_teaching);\r\n\r\n    // Create nodes for each person\r\n    const nodes = [];\r\n    schools.forEach((persons, school) => {\r\n      const centerX = Math.random() * width;\r\n      const centerY = Math.random() * height;\r\n      persons.forEach((person, i) => {\r\n        const angle = (i / persons.length) * 2 * Math.PI;\r\n        const radius = 100;\r\n        nodes.push({\r\n          ...person,\r\n          x: centerX + radius * Math.cos(angle),\r\n          y: centerY + radius * Math.sin(angle),\r\n          school,\r\n        });\r\n      });\r\n    });\r\n\r\n    // Draw links between nodes with the same school_teaching\r\n    svg\r\n      .selectAll(\".link\")\r\n      .data(nodes)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"class\", \"link\")\r\n      .attr(\"x1\", (d) => d.x)\r\n      .attr(\"y1\", (d) => d.y)\r\n      .attr(\"x2\", (d) => {\r\n        const nextNode = nodes.find((n) => n.school === d.school && n !== d);\r\n        return nextNode ? nextNode.x : d.x;\r\n      })\r\n      .attr(\"y2\", (d) => {\r\n        const nextNode = nodes.find((n) => n.school === d.school && n !== d);\r\n        return nextNode ? nextNode.y : d.y;\r\n      })\r\n      .attr(\"stroke\", \"#999\")\r\n      .attr(\"stroke-width\", 2);\r\n\r\n    // Draw nodes\r\n    svg\r\n      .selectAll(\".node\")\r\n      .data(nodes)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"cx\", (d) => d.x)\r\n      .attr(\"cy\", (d) => d.y)\r\n      .attr(\"r\", 10)\r\n      .attr(\"fill\", (d) => d3.schemeCategory10[d.school.length % 10]);\r\n\r\n    // Add labels\r\n    svg\r\n      .selectAll(\".label\")\r\n      .data(nodes)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"label\")\r\n      .attr(\"x\", (d) => d.x + 15)\r\n      .attr(\"y\", (d) => d.y)\r\n      .text((d) => d.person_name)\r\n      .attr(\"font-size\", \"12px\")\r\n      .attr(\"fill\", \"#333\");\r\n  };\r\n\r\n  // Fetch data on component mount\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Render spider web when data changes\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      renderSpiderWeb();\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Spider Data Visualization</h1>\r\n      <svg ref={svgRef}></svg>\r\n      <div>\r\n        <h2>Create New Person</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Person Name\"\r\n          value={newPerson.person_name}\r\n          onChange={(e) =>\r\n            setNewPerson({ ...newPerson, person_name: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Years of Life\"\r\n          value={newPerson.years_life}\r\n          onChange={(e) =>\r\n            setNewPerson({ ...newPerson, years_life: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"School of Teaching\"\r\n          value={newPerson.school_teaching}\r\n          onChange={(e) =>\r\n            setNewPerson({ ...newPerson, school_teaching: e.target.value })\r\n          }\r\n        />\r\n        <button onClick={createPerson}>Create</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpiderData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}