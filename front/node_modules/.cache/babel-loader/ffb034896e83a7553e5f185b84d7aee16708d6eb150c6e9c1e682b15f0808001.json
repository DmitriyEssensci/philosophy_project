{"ast":null,"code":"var _jsxFileName = \"/home/dmitriyessensci/me/philosophy_project/front/src/components/PhilosophersList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ConnectionsScale from './ConnectionsScale'; // Импортируем компонент шкалы\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhilosophersList = ({\n  data\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Фильтруем философов с хотя бы одной связью\n  const filteredData = data.filter(item => item.influenced_by && item.influenced_by.length > 0 || item.influenced && item.influenced.length > 0);\n\n  // Сортируем по сумме всех связей (от наибольшего к наименьшему)\n  const sortedData = filteredData.sort((a, b) => {\n    const aConnections = (a.influenced_by ? a.influenced_by.split(',').length : 0) + (a.influenced ? a.influenced.split(',').length : 0);\n    const bConnections = (b.influenced_by ? b.influenced_by.split(',').length : 0) + (b.influenced ? b.influenced.split(',').length : 0);\n    return bConnections - aConnections;\n  });\n\n  // Подсчёт общего количества зелёных и фиолетовых связей\n  const totalGreenConnections = data.reduce((acc, item) => acc + (item.influenced ? item.influenced.split(',').length : 0), 0);\n  const totalPurpleConnections = data.reduce((acc, item) => acc + (item.influenced_by ? item.influenced_by.split(',').length : 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '20px',\n      right: '20px',\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      style: {\n        padding: '10px',\n        backgroundColor: '#fff',\n        border: '1px solid #ccc',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: isOpen ? 'Скрыть список' : 'Показать список философов'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        backgroundColor: '#fff',\n        border: '1px solid #ccc',\n        borderRadius: '5px',\n        padding: '10px',\n        maxHeight: '300px',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ConnectionsScale, {\n        greenConnections: totalGreenConnections,\n        purpleConnections: totalPurpleConnections\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), sortedData.map(item => {\n        const greenConnections = item.influenced ? item.influenced.split(',').length : 0;\n        const purpleConnections = item.influenced_by ? item.influenced_by.split(',').length : 0;\n        const totalConnections = greenConnections + purpleConnections;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: item.person_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.short_description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ConnectionsScale, {\n            greenConnections: greenConnections,\n            purpleConnections: purpleConnections\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0441\\u0432\\u044F\\u0437\\u0435\\u0439: \", totalConnections]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(PhilosophersList, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = PhilosophersList;\nexport default PhilosophersList;\nvar _c;\n$RefreshReg$(_c, \"PhilosophersList\");","map":{"version":3,"names":["React","useState","ConnectionsScale","jsxDEV","_jsxDEV","PhilosophersList","data","_s","isOpen","setIsOpen","filteredData","filter","item","influenced_by","length","influenced","sortedData","sort","a","b","aConnections","split","bConnections","totalGreenConnections","reduce","acc","totalPurpleConnections","style","position","bottom","right","zIndex","children","onClick","padding","backgroundColor","border","borderRadius","cursor","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","maxHeight","overflowY","greenConnections","purpleConnections","map","totalConnections","marginBottom","person_name","short_description","id","_c","$RefreshReg$"],"sources":["/home/dmitriyessensci/me/philosophy_project/front/src/components/PhilosophersList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ConnectionsScale from './ConnectionsScale'; // Импортируем компонент шкалы\r\n\r\nconst PhilosophersList = ({ data }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // Фильтруем философов с хотя бы одной связью\r\n  const filteredData = data.filter(\r\n    (item) => (item.influenced_by && item.influenced_by.length > 0) || (item.influenced && item.influenced.length > 0)\r\n  );\r\n\r\n  // Сортируем по сумме всех связей (от наибольшего к наименьшему)\r\n  const sortedData = filteredData.sort((a, b) => {\r\n    const aConnections = (a.influenced_by ? a.influenced_by.split(',').length : 0) + (a.influenced ? a.influenced.split(',').length : 0);\r\n    const bConnections = (b.influenced_by ? b.influenced_by.split(',').length : 0) + (b.influenced ? b.influenced.split(',').length : 0);\r\n    return bConnections - aConnections;\r\n  });\r\n\r\n  // Подсчёт общего количества зелёных и фиолетовых связей\r\n  const totalGreenConnections = data.reduce((acc, item) => acc + (item.influenced ? item.influenced.split(',').length : 0), 0);\r\n  const totalPurpleConnections = data.reduce((acc, item) => acc + (item.influenced_by ? item.influenced_by.split(',').length : 0), 0);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        bottom: '20px',\r\n        right: '20px',\r\n        zIndex: 1000,\r\n      }}\r\n    >\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        style={{\r\n          padding: '10px',\r\n          backgroundColor: '#fff',\r\n          border: '1px solid #ccc',\r\n          borderRadius: '5px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        {isOpen ? 'Скрыть список' : 'Показать список философов'}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div\r\n          style={{\r\n            marginTop: '10px',\r\n            backgroundColor: '#fff',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '5px',\r\n            padding: '10px',\r\n            maxHeight: '300px',\r\n            overflowY: 'auto',\r\n          }}\r\n        >\r\n          {/* Шкала связей */}\r\n          <ConnectionsScale\r\n            greenConnections={totalGreenConnections}\r\n            purpleConnections={totalPurpleConnections}\r\n          />\r\n\r\n          {/* Список философов */}\r\n          {sortedData.map((item) => {\r\n            const greenConnections = item.influenced ? item.influenced.split(',').length : 0;\r\n            const purpleConnections = item.influenced_by ? item.influenced_by.split(',').length : 0;\r\n            const totalConnections = greenConnections + purpleConnections;\r\n\r\n            return (\r\n              <div key={item.id} style={{ marginBottom: '10px' }}>\r\n                <strong>{item.person_name}</strong>\r\n                <p>{item.short_description}</p>\r\n                <ConnectionsScale\r\n                  greenConnections={greenConnections}\r\n                  purpleConnections={purpleConnections}\r\n                />\r\n                <p>Всего связей: {totalConnections}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhilosophersList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMS,YAAY,GAAGJ,IAAI,CAACK,MAAM,CAC7BC,IAAI,IAAMA,IAAI,CAACC,aAAa,IAAID,IAAI,CAACC,aAAa,CAACC,MAAM,GAAG,CAAC,IAAMF,IAAI,CAACG,UAAU,IAAIH,IAAI,CAACG,UAAU,CAACD,MAAM,GAAG,CAClH,CAAC;;EAED;EACA,MAAME,UAAU,GAAGN,YAAY,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC7C,MAAMC,YAAY,GAAG,CAACF,CAAC,CAACL,aAAa,GAAGK,CAAC,CAACL,aAAa,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACP,MAAM,GAAG,CAAC,KAAKI,CAAC,CAACH,UAAU,GAAGG,CAAC,CAACH,UAAU,CAACM,KAAK,CAAC,GAAG,CAAC,CAACP,MAAM,GAAG,CAAC,CAAC;IACpI,MAAMQ,YAAY,GAAG,CAACH,CAAC,CAACN,aAAa,GAAGM,CAAC,CAACN,aAAa,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACP,MAAM,GAAG,CAAC,KAAKK,CAAC,CAACJ,UAAU,GAAGI,CAAC,CAACJ,UAAU,CAACM,KAAK,CAAC,GAAG,CAAC,CAACP,MAAM,GAAG,CAAC,CAAC;IACpI,OAAOQ,YAAY,GAAGF,YAAY;EACpC,CAAC,CAAC;;EAEF;EACA,MAAMG,qBAAqB,GAAGjB,IAAI,CAACkB,MAAM,CAAC,CAACC,GAAG,EAAEb,IAAI,KAAKa,GAAG,IAAIb,IAAI,CAACG,UAAU,GAAGH,IAAI,CAACG,UAAU,CAACM,KAAK,CAAC,GAAG,CAAC,CAACP,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5H,MAAMY,sBAAsB,GAAGpB,IAAI,CAACkB,MAAM,CAAC,CAACC,GAAG,EAAEb,IAAI,KAAKa,GAAG,IAAIb,IAAI,CAACC,aAAa,GAAGD,IAAI,CAACC,aAAa,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACP,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAEnI,oBACEV,OAAA;IACEuB,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,gBAEF5B,OAAA;MACE6B,OAAO,EAAEA,CAAA,KAAMxB,SAAS,CAAC,CAACD,MAAM,CAAE;MAClCmB,KAAK,EAAE;QACLO,OAAO,EAAE,MAAM;QACfC,eAAe,EAAE,MAAM;QACvBC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAN,QAAA,EAEDxB,MAAM,GAAG,eAAe,GAAG;IAA2B;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,EAERlC,MAAM,iBACLJ,OAAA;MACEuB,KAAK,EAAE;QACLgB,SAAS,EAAE,MAAM;QACjBR,eAAe,EAAE,MAAM;QACvBC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,KAAK;QACnBH,OAAO,EAAE,MAAM;QACfU,SAAS,EAAE,OAAO;QAClBC,SAAS,EAAE;MACb,CAAE;MAAAb,QAAA,gBAGF5B,OAAA,CAACF,gBAAgB;QACf4C,gBAAgB,EAAEvB,qBAAsB;QACxCwB,iBAAiB,EAAErB;MAAuB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,EAGD1B,UAAU,CAACgC,GAAG,CAAEpC,IAAI,IAAK;QACxB,MAAMkC,gBAAgB,GAAGlC,IAAI,CAACG,UAAU,GAAGH,IAAI,CAACG,UAAU,CAACM,KAAK,CAAC,GAAG,CAAC,CAACP,MAAM,GAAG,CAAC;QAChF,MAAMiC,iBAAiB,GAAGnC,IAAI,CAACC,aAAa,GAAGD,IAAI,CAACC,aAAa,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACP,MAAM,GAAG,CAAC;QACvF,MAAMmC,gBAAgB,GAAGH,gBAAgB,GAAGC,iBAAiB;QAE7D,oBACE3C,OAAA;UAAmBuB,KAAK,EAAE;YAAEuB,YAAY,EAAE;UAAO,CAAE;UAAAlB,QAAA,gBACjD5B,OAAA;YAAA4B,QAAA,EAASpB,IAAI,CAACuC;UAAW;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eACnCtC,OAAA;YAAA4B,QAAA,EAAIpB,IAAI,CAACwC;UAAiB;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/BtC,OAAA,CAACF,gBAAgB;YACf4C,gBAAgB,EAAEA,gBAAiB;YACnCC,iBAAiB,EAAEA;UAAkB;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACFtC,OAAA;YAAA4B,QAAA,GAAG,uEAAc,EAACiB,gBAAgB;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAP/B9B,IAAI,CAACyC,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQZ,CAAC;MAEV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CAjFIF,gBAAgB;AAAAiD,EAAA,GAAhBjD,gBAAgB;AAmFtB,eAAeA,gBAAgB;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}