{"ast":null,"code":"var _jsxFileName = \"/home/dmitriyessensci/me/philosophy_project/front/src/components/SpiderData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport SpiderWeb from './SpiderWeb';\nimport CreateCenterForm from './CreateCenterForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpiderData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:9000/data/api/').then(res => res.json()).then(data => {\n      // Добавляем координаты для рендеринга\n      const processedData = data.map((item, index) => ({\n        ...item,\n        x: 400 + Math.cos(index / data.length * 2 * Math.PI) * 300,\n        y: 400 + Math.sin(index / data.length * 2 * Math.PI) * 300\n      }));\n      setData(processedData);\n    });\n  }, []);\n  const handleCreateCenter = newCenter => {\n    fetch('http://localhost:9000/data/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCenter)\n    }).then(res => res.json()).then(newItem => {\n      // Добавляем координаты для нового центра\n      const newData = [...data, {\n        ...newItem,\n        x: 400 + Math.cos(data.length / (data.length + 1) * 2 * Math.PI) * 300,\n        y: 400 + Math.sin(data.length / (data.length + 1) * 2 * Math.PI) * 300\n      }];\n      setData(newData);\n    });\n  };\n  const handleCenterClick = center => {\n    alert(`Выбран центр: ${center.person_name}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(TransformWrapper, {\n        children: /*#__PURE__*/_jsxDEV(TransformComponent, {\n          children: /*#__PURE__*/_jsxDEV(SpiderWeb, {\n            data: data,\n            onCenterClick: handleCenterClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        padding: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CreateCenterForm, {\n        onSubmit: handleCreateCenter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SpiderData, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = SpiderData;\nexport default SpiderData;\nvar _c;\n$RefreshReg$(_c, \"SpiderData\");","map":{"version":3,"names":["React","useState","useEffect","TransformWrapper","TransformComponent","SpiderWeb","CreateCenterForm","jsxDEV","_jsxDEV","SpiderData","_s","data","setData","fetch","then","res","json","processedData","map","item","index","x","Math","cos","length","PI","y","sin","handleCreateCenter","newCenter","method","headers","body","JSON","stringify","newItem","newData","handleCenterClick","center","alert","person_name","style","display","height","children","flex","position","onCenterClick","fileName","_jsxFileName","lineNumber","columnNumber","width","padding","onSubmit","_c","$RefreshReg$"],"sources":["/home/dmitriyessensci/me/philosophy_project/front/src/components/SpiderData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\r\nimport SpiderWeb from './SpiderWeb';\r\nimport CreateCenterForm from './CreateCenterForm';\r\n\r\nconst SpiderData = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:9000/data/api/')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // Добавляем координаты для рендеринга\r\n        const processedData = data.map((item, index) => ({\r\n          ...item,\r\n          x: 400 + Math.cos((index / data.length) * 2 * Math.PI) * 300,\r\n          y: 400 + Math.sin((index / data.length) * 2 * Math.PI) * 300,\r\n        }));\r\n        setData(processedData);\r\n      });\r\n  }, []);\r\n\r\n  const handleCreateCenter = (newCenter) => {\r\n    fetch('http://localhost:9000/data/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newCenter),\r\n    })\r\n      .then(res => res.json())\r\n      .then(newItem => {\r\n        // Добавляем координаты для нового центра\r\n        const newData = [...data, {\r\n          ...newItem,\r\n          x: 400 + Math.cos((data.length / (data.length + 1)) * 2 * Math.PI) * 300,\r\n          y: 400 + Math.sin((data.length / (data.length + 1)) * 2 * Math.PI) * 300,\r\n        }];\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  const handleCenterClick = (center) => {\r\n    alert(`Выбран центр: ${center.person_name}`);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      <div style={{ flex: 1, position: 'relative' }}>\r\n        <TransformWrapper>\r\n          <TransformComponent>\r\n            <SpiderWeb data={data} onCenterClick={handleCenterClick} />\r\n          </TransformComponent>\r\n        </TransformWrapper>\r\n      </div>\r\n      <div style={{ width: '300px', padding: '20px' }}>\r\n        <CreateCenterForm onSubmit={handleCreateCenter} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpiderData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}