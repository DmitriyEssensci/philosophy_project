{"ast":null,"code":"var _jsxFileName = \"/home/dmitriyessensci/me/philosophy_project/front/src/components/SpiderData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport SpiderWeb from './SpiderWeb';\nimport CreateCenterForm from './CreateCenterForm';\nimport CenterDetailsModal from './CenterDetailsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpiderData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedCenter, setSelectedCenter] = useState(null);\n  useEffect(() => {\n    console.log('Загрузка данных с сервера...');\n    fetch('http://localhost:9000/data/api/').then(res => {\n      if (!res.ok) {\n        throw new Error('Ошибка при загрузке данных');\n      }\n      return res.json();\n    }).then(response => {\n      console.log('Данные получены:', response);\n      const rawData = response.objects;\n      if (Array.isArray(rawData)) {\n        const processedData = rawData.filter(item => item.person_name !== 'string').map((item, index, array) => ({\n          ...item,\n          x: 400 + Math.cos(index / array.length * 2 * Math.PI) * 300,\n          y: 400 + Math.sin(index / array.length * 2 * Math.PI) * 300\n        }));\n        console.log('Обработанные данные:', processedData);\n        setData(processedData);\n      } else {\n        throw new Error('Данные не являются массивом');\n      }\n    }).catch(err => {\n      console.error('Ошибка при загрузке данных:', err);\n      setError(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  const handleCreateCenter = newCenter => {\n    console.log('Создание нового центра:', newCenter);\n    fetch('http://localhost:9000/data/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCenter)\n    }).then(res => res.json()).then(newItem => {\n      console.log('Новый центр создан:', newItem);\n      const newData = [...data, {\n        ...newItem,\n        x: 400 + Math.cos(data.length / (data.length + 1) * 2 * Math.PI) * 300,\n        y: 400 + Math.sin(data.length / (data.length + 1) * 2 * Math.PI) * 300\n      }];\n      setData(newData);\n    }).catch(err => {\n      console.error('Ошибка при создании центра:', err);\n      setError(err.message);\n    });\n  };\n  const handleCenterClick = center => {\n    console.log('Выбран центр:', center);\n    alert(`Выбран центр: ${center.person_name}`);\n  };\n  const handleCenterDoubleClick = center => {\n    console.log('Двойной клик на центр:', center); // Отладочный вывод\n    setSelectedCenter(center);\n  };\n  const handleCloseModal = () => {\n    setSelectedCenter(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh',\n      width: '100vw'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(TransformWrapper, {\n        doubleClick: {\n          disabled: true\n        } // Отключаем обработку двойного клика\n        ,\n        children: /*#__PURE__*/_jsxDEV(TransformComponent, {\n          children: /*#__PURE__*/_jsxDEV(SpiderWeb, {\n            data: data,\n            onCenterClick: handleCenterClick,\n            onCenterDoubleClick: handleCenterDoubleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '7cm',\n        padding: '20px',\n        borderLeft: '1px solid #ccc'\n      },\n      children: /*#__PURE__*/_jsxDEV(CreateCenterForm, {\n        onSubmit: handleCreateCenter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), selectedCenter && /*#__PURE__*/_jsxDEV(CenterDetailsModal, {\n      center: selectedCenter,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(SpiderData, \"nr/aSupnb3DyMQgXmLw8LgKGO6o=\");\n_c = SpiderData;\nexport default SpiderData;\nvar _c;\n$RefreshReg$(_c, \"SpiderData\");","map":{"version":3,"names":["React","useState","useEffect","TransformWrapper","TransformComponent","SpiderWeb","CreateCenterForm","CenterDetailsModal","jsxDEV","_jsxDEV","SpiderData","_s","data","setData","loading","setLoading","error","setError","selectedCenter","setSelectedCenter","console","log","fetch","then","res","ok","Error","json","response","rawData","objects","Array","isArray","processedData","filter","item","person_name","map","index","array","x","Math","cos","length","PI","y","sin","catch","err","message","finally","handleCreateCenter","newCenter","method","headers","body","JSON","stringify","newItem","newData","handleCenterClick","center","alert","handleCenterDoubleClick","handleCloseModal","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","height","width","flex","position","doubleClick","disabled","onCenterClick","onCenterDoubleClick","padding","borderLeft","onSubmit","onClose","_c","$RefreshReg$"],"sources":["/home/dmitriyessensci/me/philosophy_project/front/src/components/SpiderData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\r\nimport SpiderWeb from './SpiderWeb';\r\nimport CreateCenterForm from './CreateCenterForm';\r\nimport CenterDetailsModal from './CenterDetailsModal';\r\n\r\nconst SpiderData = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedCenter, setSelectedCenter] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Загрузка данных с сервера...');\r\n    fetch('http://localhost:9000/data/api/')\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error('Ошибка при загрузке данных');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        console.log('Данные получены:', response);\r\n        const rawData = response.objects;\r\n\r\n        if (Array.isArray(rawData)) {\r\n          const processedData = rawData\r\n            .filter((item) => item.person_name !== 'string')\r\n            .map((item, index, array) => ({\r\n              ...item,\r\n              x: 400 + Math.cos((index / array.length) * 2 * Math.PI) * 300,\r\n              y: 400 + Math.sin((index / array.length) * 2 * Math.PI) * 300,\r\n            }));\r\n          console.log('Обработанные данные:', processedData);\r\n          setData(processedData);\r\n        } else {\r\n          throw new Error('Данные не являются массивом');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error('Ошибка при загрузке данных:', err);\r\n        setError(err.message);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleCreateCenter = (newCenter) => {\r\n    console.log('Создание нового центра:', newCenter);\r\n    fetch('http://localhost:9000/data/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newCenter),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((newItem) => {\r\n        console.log('Новый центр создан:', newItem);\r\n        const newData = [\r\n          ...data,\r\n          {\r\n            ...newItem,\r\n            x: 400 + Math.cos((data.length / (data.length + 1)) * 2 * Math.PI) * 300,\r\n            y: 400 + Math.sin((data.length / (data.length + 1)) * 2 * Math.PI) * 300,\r\n          },\r\n        ];\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Ошибка при создании центра:', err);\r\n        setError(err.message);\r\n      });\r\n  };\r\n\r\n  const handleCenterClick = (center) => {\r\n    console.log('Выбран центр:', center);\r\n    alert(`Выбран центр: ${center.person_name}`);\r\n  };\r\n\r\n  const handleCenterDoubleClick = (center) => {\r\n    console.log('Двойной клик на центр:', center); // Отладочный вывод\r\n    setSelectedCenter(center);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedCenter(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Загрузка...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Ошибка: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh', width: '100vw' }}>\r\n      {/* Основное поле с паутиной */}\r\n      <div style={{ flex: 1, position: 'relative', width: '100%', height: '100%' }}>\r\n        <TransformWrapper\r\n          doubleClick={{ disabled: true }} // Отключаем обработку двойного клика\r\n        >\r\n          <TransformComponent>\r\n            <SpiderWeb\r\n              data={data}\r\n              onCenterClick={handleCenterClick}\r\n              onCenterDoubleClick={handleCenterDoubleClick}\r\n            />\r\n          </TransformComponent>\r\n        </TransformWrapper>\r\n      </div>\r\n\r\n      {/* Боковое окно с формой */}\r\n      <div style={{ width: '7cm', padding: '20px', borderLeft: '1px solid #ccc' }}>\r\n        <CreateCenterForm onSubmit={handleCreateCenter} />\r\n      </div>\r\n\r\n      {/* Модальное окно */}\r\n      {selectedCenter && (\r\n        <CenterDetailsModal center={selectedCenter} onClose={handleCloseModal} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpiderData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}