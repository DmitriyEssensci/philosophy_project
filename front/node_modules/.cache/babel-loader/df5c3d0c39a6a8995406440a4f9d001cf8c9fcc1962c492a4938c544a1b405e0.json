{"ast":null,"code":"var _jsxFileName = \"/home/dmitriyessensci/me/philosophy_project/front/src/components/SpiderWeb.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpiderWeb = ({\n  data,\n  onCenterClick\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data.length) return;\n    const svg = d3.select(svgRef.current);\n    const width = svg.attr('width');\n    const height = svg.attr('height');\n    const centerX = width / 2;\n    const centerY = height / 2;\n\n    // Очистка предыдущего рендеринга\n    svg.selectAll('*').remove();\n\n    // Группировка данных по school_teaching\n    const groupedData = d3.group(data, d => d.school_teaching);\n\n    // Цветовая шкала для разных школ\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n    // Отрисовка связей между центрами\n    groupedData.forEach((group, key) => {\n      if (group.length > 1) {\n        for (let i = 0; i < group.length - 1; i++) {\n          for (let j = i + 1; j < group.length; j++) {\n            svg.append('line').attr('x1', group[i].x).attr('y1', group[i].y).attr('x2', group[j].x).attr('y2', group[j].y).attr('stroke', colorScale(key)).attr('stroke-width', 2);\n          }\n        }\n      }\n    });\n\n    // Отрисовка центров\n    svg.selectAll('circle').data(data).enter().append('circle').attr('cx', d => d.x).attr('cy', d => d.y).attr('r', 20).attr('fill', d => colorScale(d.school_teaching)).on('click', (event, d) => onCenterClick(d));\n\n    // Добавление текста\n    svg.selectAll('text').data(data).enter().append('text').attr('x', d => d.x).attr('y', d => d.y + 30).text(d => d.person_name).attr('text-anchor', 'middle').attr('fill', 'black');\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    width: \"800\",\n    height: \"800\",\n    style: {\n      border: '1px solid #ccc'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(SpiderWeb, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = SpiderWeb;\nexport default SpiderWeb;\nvar _c;\n$RefreshReg$(_c, \"SpiderWeb\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","SpiderWeb","data","onCenterClick","_s","svgRef","length","svg","select","current","width","attr","height","centerX","centerY","selectAll","remove","groupedData","group","d","school_teaching","colorScale","scaleOrdinal","schemeCategory10","forEach","key","i","j","append","x","y","enter","on","event","text","person_name","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dmitriyessensci/me/philosophy_project/front/src/components/SpiderWeb.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst SpiderWeb = ({ data, onCenterClick }) => {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!data.length) return;\r\n\r\n    const svg = d3.select(svgRef.current);\r\n    const width = svg.attr('width');\r\n    const height = svg.attr('height');\r\n    const centerX = width / 2;\r\n    const centerY = height / 2;\r\n\r\n    // Очистка предыдущего рендеринга\r\n    svg.selectAll('*').remove();\r\n\r\n    // Группировка данных по school_teaching\r\n    const groupedData = d3.group(data, d => d.school_teaching);\r\n\r\n    // Цветовая шкала для разных школ\r\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n    // Отрисовка связей между центрами\r\n    groupedData.forEach((group, key) => {\r\n      if (group.length > 1) {\r\n        for (let i = 0; i < group.length - 1; i++) {\r\n          for (let j = i + 1; j < group.length; j++) {\r\n            svg.append('line')\r\n              .attr('x1', group[i].x)\r\n              .attr('y1', group[i].y)\r\n              .attr('x2', group[j].x)\r\n              .attr('y2', group[j].y)\r\n              .attr('stroke', colorScale(key))\r\n              .attr('stroke-width', 2);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // Отрисовка центров\r\n    svg.selectAll('circle')\r\n      .data(data)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('cx', d => d.x)\r\n      .attr('cy', d => d.y)\r\n      .attr('r', 20)\r\n      .attr('fill', d => colorScale(d.school_teaching))\r\n      .on('click', (event, d) => onCenterClick(d));\r\n\r\n    // Добавление текста\r\n    svg.selectAll('text')\r\n      .data(data)\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', d => d.x)\r\n      .attr('y', d => d.y + 30)\r\n      .text(d => d.person_name)\r\n      .attr('text-anchor', 'middle')\r\n      .attr('fill', 'black');\r\n  }, [data]);\r\n\r\n  return (\r\n    <svg ref={svgRef} width=\"800\" height=\"800\" style={{ border: '1px solid #ccc' }} />\r\n  );\r\n};\r\n\r\nexport default SpiderWeb;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}