{"ast":null,"code":"var _jsxFileName = \"/home/dmitriyessensci/me/philosophy_project/front/src/components/spider_data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Zoom } from 'react-zoom-pan-pinch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpiderData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [newCenter, setNewCenter] = useState({\n    person_name: '',\n    years_life: '',\n    school_teaching: ''\n    // опциональные поля\n  });\n  useEffect(() => {\n    fetch('http://localhost:9000/data/api/').then(res => res.json()).then(data => setData(data));\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://localhost:9000/data/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCenter)\n    }).then(res => res.json()).then(data => {\n      setData([...data]);\n      // Сбросить поля формы\n      setNewCenter({\n        person_name: '',\n        years_life: '',\n        school_teaching: ''\n        // сбросить опциональные поля\n      });\n    });\n  };\n\n  // Функция для отрисовки паутины\n  const drawSpiderWeb = () => {\n    // Реализуйте логику отрисовки с использованием SVG\n    // Сгруппируйте данные по school_teaching и соедините связанные кружки\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"web-container\",\n      children: /*#__PURE__*/_jsxDEV(Zoom, {\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          children: drawSpiderWeb()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0446\\u0435\\u043D\\u0442\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SpiderData, \"GuWGjoxptJu/AihhPxB9/HHmaaA=\");\n_c = SpiderData;\nexport default SpiderData;\nvar _c;\n$RefreshReg$(_c, \"SpiderData\");","map":{"version":3,"names":["React","useState","useEffect","Zoom","jsxDEV","_jsxDEV","SpiderData","_s","data","setData","newCenter","setNewCenter","person_name","years_life","school_teaching","fetch","then","res","json","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","drawSpiderWeb","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/dmitriyessensci/me/philosophy_project/front/src/components/spider_data.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Zoom } from 'react-zoom-pan-pinch';\r\n\r\nconst SpiderData = () => {\r\n  const [data, setData] = useState([]);\r\n  const [newCenter, setNewCenter] = useState({\r\n    person_name: '',\r\n    years_life: '',\r\n    school_teaching: '',\r\n    // опциональные поля\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:9000/data/api/')\r\n      .then(res => res.json())\r\n      .then(data => setData(data));\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch('http://localhost:9000/data/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newCenter),\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      setData([...data]);\r\n      // Сбросить поля формы\r\n      setNewCenter({\r\n        person_name: '',\r\n        years_life: '',\r\n        school_teaching: '',\r\n        // сбросить опциональные поля\r\n      });\r\n    });\r\n  };\r\n\r\n  // Функция для отрисовки паутины\r\n  const drawSpiderWeb = () => {\r\n    // Реализуйте логику отрисовки с использованием SVG\r\n    // Сгруппируйте данные по school_teaching и соедините связанные кружки\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"web-container\">\r\n        <Zoom>\r\n          <svg>\r\n            {drawSpiderWeb()}\r\n          </svg>\r\n        </Zoom>\r\n      </div>\r\n      <div className=\"form-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Поля формы здесь */}\r\n          <button type=\"submit\">Создать центр</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpiderData;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IACzCW,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE,EAAE;IACdC,eAAe,EAAE;IACjB;EACF,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACR,IAAI,IAAIC,OAAO,CAACD,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,KAAK,CAAC,6BAA6B,EAAE;MACnCO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,SAAS;IAChC,CAAC,CAAC,CACDM,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACR,IAAI,IAAI;MACZC,OAAO,CAAC,CAAC,GAAGD,IAAI,CAAC,CAAC;MAClB;MACAG,YAAY,CAAC;QACXC,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE,EAAE;QACdC,eAAe,EAAE;QACjB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMa,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA;EAAA,CACD;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxB,OAAA;MAAKuB,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BxB,OAAA,CAACF,IAAI;QAAA0B,QAAA,eACHxB,OAAA;UAAAwB,QAAA,EACGF,aAAa,CAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACN5B,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BxB,OAAA;QAAM6B,QAAQ,EAAEf,YAAa;QAAAU,QAAA,eAE3BxB,OAAA;UAAQ8B,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5DID,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AA8DhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}